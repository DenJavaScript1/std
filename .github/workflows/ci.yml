name: ci

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  test:
    runs-on: ${{ matrix.os }}
    timeout-minutes: 30
    strategy:
      fail-fast: false
      matrix:
        # TODO(ry): reenable canary when on-going builds in deno repo do not
        # result in red builds in std.
        deno: [1.x] # [1.x, canary]
        os: [macOS-latest, ubuntu-latest, windows-2019]

    steps:
      - name: Clone repository
        uses: actions/checkout@v2
        with:
          submodules: true
          persist-credentials: false

      - name: Set up Deno
        uses: denoland/setup-deno@v1.0.0
        with:
          deno-version: ${{ matrix.deno }}

      - name: Run tests
        run: deno test --unstable --allow-all

      - name: Generate lcov
        run: deno coverage --unstable --lcov ./cov > cov.lcov

      - name: Upload coverage
        uses: codecov/codecov-action@v1
        with:
          name: ${{ matrix.os }}-${{ matrix.deno }}
          files: cov.lcov

  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Clone repository
        uses: actions/checkout@v2
        with:
          submodules: false
          persist-credentials: false

      - name: Set up Deno
        uses: denoland/setup-deno@v1.0.0

      - name: Format
        run: deno fmt --check

      - name: Lint
        run: deno lint
