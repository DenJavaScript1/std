name: Test

on: [push]

jobs:
  build:
    name: Test on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macOS-latest]
    steps:
      # Checkout the repository
      - name: Enable symlinks (windows)
        if: startsWith(matrix.os, 'windows')
        run: git config --global core.symlinks true
      - name: Checkout the repository
        uses: actions/checkout@v1
        with:
          submodules: true

      # Setup node
      - name: Setup node
        uses: actions/setup-node@v1
        with:
          node-version: "12.x"
      - name: Install npm packages (unix)
        if: startsWith(matrix.os, 'ubuntu') || startsWith(matrix.os, 'macOS')
        run: npm install eslint@5.16.0 typescript@$(TS_VERSION) @typescript-eslint/eslint-plugin@1.13.0 @typescript-eslint/parser@1.13.0 eslint-config-prettier
        env:
          TS_VERSION: "3.4.5"
      - name: Install npm packages (windows)
        if: startsWith(matrix.os, 'windows')
        shell: powershell
        run: npm install eslint@5.16.0 typescript@$TS_VERSION @typescript-eslint/eslint-plugin@1.13.0 @typescript-eslint/parser@1.13.0 eslint-config-prettier
        env:
          TS_VERSION: "3.4.5"

      # Setup deno
      - name: Setup deno
        uses: denolib/setup-deno@v1
        with:
          deno-version: "v0.18.0"

      # Run eslint
      - name: Run eslint
        shell: bash
        run: npx eslint **/*.ts --max-warnings=0

      # Test
      - name: Run tests (unix)
        if: startsWith(matrix.os, 'ubuntu') || startsWith(matrix.os, 'macOS')
        run: |
          export DENO_EXE_SUFFIX=
          /bin/bash -e .ci/test.sh
      - name: Run tests (windows)
        if: startsWith(matrix.os, 'windows')
        shell: bash
        run: |
          export DENO_EXE_SUFFIX=.exe
          "C:/Program Files/Git/bin/bash.EXE" --noprofile --norc -e -o pipefail .ci/test.sh
