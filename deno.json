{
  "compilerOptions": {
    "strict": true,
    "useUnknownInCatchVariables": true,
    "noImplicitOverride": true
  },
  "fmt": {
    "files": {
      "exclude": [
        ".git",
        "crypto/_wasm/target",
        "encoding/varint/_wasm/target",
        "cov",
        "encoding/testdata/jsonc",
        "encoding/front_matter/testdata",
        "wasi/testdata"
      ]
    }
  },
  "importMap": "./test_import_map.json",
  "lint": {
    "files": {
      "exclude": [
        ".git",
        "crypto/_wasm/target",
        "encoding/varint/_wasm/target",
        "encoding/testdata/jsonc",
        "encoding/front_matter/testdata",
        "cov",
        "wasi/testdata"
      ]
    }
  },
  "tasks": {
    "test": "deno test --doc --unstable --allow-all --coverage=./cov --ignore=_tools/testdata,redis/",
    "test:browser": "git grep --name-only \"This module is browser compatible.\" | grep -v deno.json | grep -v .github/workflows | xargs deno cache --check --reload --config browser-compat.tsconfig.json",
    "fmt:licence-headers": "deno run --allow-read --allow-write ./_tools/check_licence.ts",
    "lint:deprecations": "deno run --allow-read --allow-net ./_tools/check_deprecation.ts",
    "lint:doc-imports": "deno run --allow-env --allow-read ./_tools/check_doc_imports.ts",
    "lint:check-assertions": "deno run --allow-read --allow-net ./_tools/check_assertions.ts",
    "lint": "deno lint && deno task fmt:licence-headers --check && deno task lint:deprecations && deno task lint:doc-imports && deno task lint:check-assertions",
    "build:crypto": "deno task --cwd crypto/_wasm wasmbuild",
    "build:varint": "deno task --cwd encoding/varint/_wasm wasmbuild",
    "wasmbuild": "deno run --unstable -A https://deno.land/x/wasmbuild@0.10.3/main.ts --js-ext mjs --sync",
    "redis:start": "rm -f dump.rdb && redis-server --daemonize yes",
    "redis:test": "deno test --allow-net --doc --coverage=./cov redis/test.ts",
    "redis:bench": "deno bench --allow-net --allow-env redis/bench.ts"
  }
}
