{
  "compilerOptions": {
    "strict": true,
    "useUnknownInCatchVariables": true,
    "noImplicitOverride": true
  },
  "imports": {
    "https://deno.land/std@$STD_VERSION/": "./"
  },
  "tasks": {
    "test": "deno test --doc --unstable --allow-all --parallel --coverage=./cov",
    "test:browser": "git grep --name-only \"This module is browser compatible.\" | grep -v deno.json | grep -v .github/workflows | grep -v _tools | xargs deno check --config browser-compat.tsconfig.json",
    "fmt:licence-headers": "deno run --allow-read --allow-write ./_tools/check_licence.ts",
    "lint:deprecations": "deno run --allow-read --allow-net ./_tools/check_deprecation.ts",
    "lint:doc-imports": "deno run --allow-env --allow-read ./_tools/check_doc_imports.ts",
    "lint:check-assertions": "deno run --allow-read --allow-net ./_tools/check_assertions.ts",
    "lint": "deno lint && deno task fmt:licence-headers --check && deno task lint:deprecations && deno task lint:doc-imports && deno task lint:check-assertions",
    "typos": "typos -c ./.github/workflows/typos.toml",
    "build:crypto": "deno task --cwd crypto/_wasm wasmbuild",
    "wasmbuild": "deno run --unstable -A https://deno.land/x/wasmbuild@0.10.3/main.ts --js-ext mjs --sync"
  },
  "exclude": [
    ".git",
    "crypto/_wasm/target",
    "cov",
    "jsonc/testdata",
    "front_matter/testdata",
    "wasi/testdata"
  ]
}
